//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;

namespace Common {
	/**
	 * A data structure that holds unique values
	 */
	public class UniqueSet<T> {

		private readonly Dictionary<T, T> map;

		/**
		 * Constructor
		 */
		public UniqueSet() {
			this.map = new Dictionary<T, T>();
		}

		/**
		 * Adds an item to the set
		 */
		public void Add(T item) {
			if(Contains(item)) {
				// already has it
				return;
			}

			this.map[item] = item;
		}

		/**
		 * Removes an item from the set
		 */
		public void Remove(T item) {
			this.map.Remove(item);
		}

		/**
		 * Clears the set
		 */
		public void Clear() {
			this.map.Clear();
		}

		public int Count {
			get {
				return this.map.Count;
			}
		}

		public IEnumerable<T> Items {
			get {
				return this.map.Keys;
			}
		}

		/**
		 * Returns whether or not the set already contains the item
		 */
		public bool Contains(T item) {
			return this.map.ContainsKey(item);
		}

	}
}
